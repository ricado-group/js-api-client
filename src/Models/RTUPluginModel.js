/**
 * File Auto-Generated by the RICADO Gen 4 PHP API Project
 * 
 * Do Not Edit this File Manually!
 */

import BaseModel from '../Models/BaseModel';
import RTUPluginController from '../Controllers/RTUPluginController';

/**
 * Model Class for a RTU Plugin
 * @hideconstructor
 * @extends BaseModel
 */
class RTUPluginModel extends BaseModel
{
    /**
     * RTUPluginModel Constructor
     * 
     * @public
     * @param {Object<string, any>} json The RTU Plugin Properties
     */
    constructor(json)
    {
        super(json);
        
        /**
         * The Properties to Update for a RTU Plugin
         * 
         * @type {Object<string, any>}
         * @private
         */
        this._updateJson = {};
    }

    /**
     * The RTU Plugin ID
     * 
     * @public
     * @type {number}
     */
    get id()
    {
        return this._json.id;
    }

    /**
     * The Plugin Name
     * 
     * @public
     * @type {string}
     */
    get name()
    {
        return this._json.name;
    }

    /**
     * The Plugin Name
     * 
     * @public
     * @type {string}
     */
    set name(value)
    {
        this._json.name = value;
        this._updateJson.name = value;
    }

    /**
     * The Company this RTU Plugin belongs to
     * 
     * @public
     * @type {string}
     */
    get companyId()
    {
        return this._json.companyId;
    }

    /**
     * The Company this RTU Plugin belongs to
     * 
     * @public
     * @type {string}
     */
    set companyId(value)
    {
        this._json.companyId = value;
        this._updateJson.companyId = value;
    }

    /**
     * Whether the RTU Plugin has been deleted
     * 
     * @public
     * @type {boolean}
     */
    get deleted()
    {
        return this._json.deleted;
    }

    /**
     * When the RTU Plugin was last updated
     * 
     * @public
     * @type {Date}
     */
    get updateTimestamp()
    {
        return this._json.updateTimestamp;
    }

    /**
     * Update this **RTU Plugin**
     * 
     * @public
     * @return {Promise<boolean>}
     */
    update()
    {
        return new Promise((resolve, reject) => {
            RTUPluginController.update(this._json.id, this._updateJson)
            .then((modelResult) => {
                // TODO: Validate the Model Result, Replace everything in this Model with the Model Result, Return True
                
                resolve(true);
            })
            .catch(error => reject(error));
        });
    }

    /**
     * Delete this **RTU Plugin**
     * 
     * @public
     * @return {Promise<boolean>}
     */
    delete()
    {
        return RTUPluginController.delete(this._json.id);
    }
}

export default RTUPluginModel;