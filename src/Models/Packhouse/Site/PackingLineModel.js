/**
 * File Auto-Generated by the RICADO Gen 4 PHP API Project
 * 
 * Do Not Edit this File Manually!
 */

import BaseSiteModel from '../../../Models/Site/BaseSiteModel';
import PackingLineController from '../../../Controllers/Packhouse/Site/PackingLineController';

/**
 * Model Class for a Packing Line
 * @hideconstructor
 * @extends BaseSiteModel
 */
class PackingLineModel extends BaseSiteModel
{
    /**
     * PackingLineModel Constructor
     * 
     * @public
     * @param {Object<string, any>} json The Packing Line Properties
     * @param {number} siteId The Site ID associated with this Packing Line
     */
    constructor(json, siteId)
    {
        super(json, siteId);
        
        /**
         * The Properties to Update for a Packing Line
         * 
         * @type {Object<string, any>}
         * @private
         */
        this._updateJson = {};
    }

    /**
     * The Packing Line ID
     * 
     * @public
     * @type {string}
     */
    get id()
    {
        return this._json.id;
    }

    /**
     * The RTU this Packing Line belongs to
     * 
     * @public
     * @type {?number}
     */
    get rtuId()
    {
        return this._json.rtuId;
    }

    /**
     * The Packing Line Name
     * 
     * @public
     * @type {string}
     */
    get name()
    {
        return this._json.name;
    }

    /**
     * The Packing Line Name
     * 
     * @public
     * @type {string}
     */
    set name(value)
    {
        this._json.name = value;
        this._updateJson.name = value;
    }

    /**
     * The Points used by this Packing Line
     * 
     * @public
     * @type {Object}
     */
    get points()
    {
        return this._json.points;
    }

    /**
     * The Points used by this Packing Line
     * 
     * @public
     * @type {Object}
     */
    set points(value)
    {
        this._json.points = value;
        this._updateJson.points = value;
    }

    /**
     * The Sizer Objects that belong to this Packing Line
     * 
     * @public
     * @type {Object[]}
     */
    get sizers()
    {
        return this._json.sizers;
    }

    /**
     * The Sizer Objects that belong to this Packing Line
     * 
     * @public
     * @type {Object[]}
     */
    set sizers(value)
    {
        this._json.sizers = value;
        this._updateJson.sizers = value;
    }

    /**
     * The Bin Tip Objects that belong to this this Packing Line
     * 
     * @public
     * @type {Object[]}
     */
    get binTips()
    {
        return this._json.binTips;
    }

    /**
     * The Bin Tip Objects that belong to this this Packing Line
     * 
     * @public
     * @type {Object[]}
     */
    set binTips(value)
    {
        this._json.binTips = value;
        this._updateJson.binTips = value;
    }

    /**
     * The Reject Bin Scale Objects that belong to this Packing Line
     * 
     * @public
     * @type {Object[]}
     */
    get rejectBinScales()
    {
        return this._json.rejectBinScales;
    }

    /**
     * The Reject Bin Scale Objects that belong to this Packing Line
     * 
     * @public
     * @type {Object[]}
     */
    set rejectBinScales(value)
    {
        this._json.rejectBinScales = value;
        this._updateJson.rejectBinScales = value;
    }

    /**
     * The Automation Object for this Packing Line
     * 
     * @public
     * @type {?Object}
     */
    get automation()
    {
        return this._json.automation;
    }

    /**
     * The Automation Object for this Packing Line
     * 
     * @public
     * @type {?Object}
     */
    set automation(value)
    {
        this._json.automation = value;
        this._updateJson.automation = value;
    }

    /**
     * The Alarm Groups that are used by this Packing Line
     * 
     * @public
     * @type {string[]}
     */
    get alarmGroups()
    {
        return this._json.alarmGroups;
    }

    /**
     * The Alarm Groups that are used by this Packing Line
     * 
     * @public
     * @type {string[]}
     */
    set alarmGroups(value)
    {
        this._json.alarmGroups = value;
        this._updateJson.alarmGroups = value;
    }

    /**
     * The Class Types that are defined for this Packing Line
     * 
     * @public
     * @type {Object[]}
     */
    get classTypes()
    {
        return this._json.classTypes;
    }

    /**
     * The Class Types that are defined for this Packing Line
     * 
     * @public
     * @type {Object[]}
     */
    set classTypes(value)
    {
        this._json.classTypes = value;
        this._updateJson.classTypes = value;
    }

    /**
     * The FreshPack Integration Configuration for this Packing Line
     * 
     * @public
     * @type {?Object}
     */
    get freshPackIntegration()
    {
        return this._json.freshPackIntegration;
    }

    /**
     * The FreshPack Integration Configuration for this Packing Line
     * 
     * @public
     * @type {?Object}
     */
    set freshPackIntegration(value)
    {
        this._json.freshPackIntegration = value;
        this._updateJson.freshPackIntegration = value;
    }

    /**
     * The FreshQuality Integration Configuration for this Packing Line
     * 
     * @public
     * @type {?Object}
     */
    get freshQualityIntegration()
    {
        return this._json.freshQualityIntegration;
    }

    /**
     * The FreshQuality Integration Configuration for this Packing Line
     * 
     * @public
     * @type {?Object}
     */
    set freshQualityIntegration(value)
    {
        this._json.freshQualityIntegration = value;
        this._updateJson.freshQualityIntegration = value;
    }

    /**
     * Whether the Packing Line has been deleted
     * 
     * @public
     * @type {boolean}
     */
    get deleted()
    {
        return this._json.deleted;
    }

    /**
     * When the Packing Line was last updated
     * 
     * @public
     * @type {Date}
     */
    get updateTimestamp()
    {
        return this._json.updateTimestamp;
    }

    /**
     * The Site ID associated with this Packing Line
     * 
     * @public
     * @type {number}
     */
    get siteId()
    {
        return this._siteId;
    }

    /**
     * Update this **Packing Line**
     * 
     * @public
     * @return {Promise<boolean>}
     */
    update()
    {
        return new Promise((resolve, reject) => {
            PackingLineController.update(this._siteId, this._json.id, this._updateJson)
            .then((modelResult) => {
                // TODO: Validate the Model Result, Replace everything in this Model with the Model Result, Return True
                
                resolve(true);
            })
            .catch(error => reject(error));
        });
    }

    /**
     * Delete this **Packing Line**
     * 
     * @public
     * @return {Promise<boolean>}
     */
    delete()
    {
        return PackingLineController.delete(this._siteId, this._json.id);
    }
}

export default PackingLineModel;