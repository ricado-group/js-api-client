/**
 * File Auto-Generated by the RICADO Gen 4 PHP API Project
 * 
 * Do Not Edit this File Manually!
 */

import BaseSiteModel from '../../../Models/Site/BaseSiteModel';

/**
 * Model Class for a Bin Tip Weight
 * 
 * @class
 * @hideconstructor
 * @extends BaseSiteModel
 */
class BinTipWeightModel extends BaseSiteModel
{
    /**
     * BinTipWeightModel Constructor
     * 
     * @protected
     * @param {number} siteId The Site ID associated with this Bin Tip Weight
     */
    constructor(siteId)
    {
        super();
        
        /**
         * The Bin Tip Weight ID
         * 
         * @type {string}
         * @private
         */
        this._id = undefined;
        
        /**
         * The Bin Tip ID associated with this Bin Weight
         * 
         * @type {string}
         * @private
         */
        this._binTipId = undefined;
        
        /**
         * The Packrun ID associated with this Bin Weight
         * 
         * @type {string}
         * @private
         */
        this._packrunId = undefined;
        
        /**
         * When this Bin Weight was Created
         * 
         * @type {Date}
         * @private
         */
        this._createdTimestamp = undefined;
        
        /**
         * The Bin Weight Type
         * 
         * @type {string}
         * @private
         */
        this._weightType = undefined;
        
        /**
         * The Bin Weight
         * 
         * @type {number}
         * @private
         */
        this._weight = undefined;
        
        /**
         * The Bin Scale ID associated with this Bin Weight
         * 
         * @type {?string}
         * @private
         */
        this._binScaleId = undefined;
        
        /**
         * Whether the Bin Tip Weight has been deleted
         * 
         * @type {boolean}
         * @private
         */
        this._deleted = undefined;
        
        /**
         * When the Bin Tip Weight was last updated
         * 
         * @type {Date}
         * @private
         */
        this._updateTimestamp = undefined;
        
        /**
         * The Site ID associated with this Bin Tip Weight
         * 
         * @type {number}
         * @private
         */
        this._siteId = siteId;
    }

    /**
     * The Bin Tip Weight ID
     * 
     * @public
     * @type {string}
     */
    get id()
    {
        return this._id;
    }

    /**
     * The Bin Tip ID associated with this Bin Weight
     * 
     * @public
     * @type {string}
     */
    get binTipId()
    {
        return this._binTipId;
    }

    /**
     * The Packrun ID associated with this Bin Weight
     * 
     * @public
     * @type {string}
     */
    get packrunId()
    {
        return this._packrunId;
    }

    /**
     * When this Bin Weight was Created
     * 
     * @public
     * @type {Date}
     */
    get createdTimestamp()
    {
        return this._createdTimestamp;
    }

    /**
     * The Bin Weight Type
     * 
     * @public
     * @type {string}
     */
    get weightType()
    {
        return this._weightType;
    }

    /**
     * The Bin Weight
     * 
     * @public
     * @type {number}
     */
    get weight()
    {
        return this._weight;
    }

    /**
     * The Bin Scale ID associated with this Bin Weight
     * 
     * @public
     * @type {?string}
     */
    get binScaleId()
    {
        return this._binScaleId;
    }

    /**
     * Whether the Bin Tip Weight has been deleted
     * 
     * @public
     * @type {boolean}
     */
    get deleted()
    {
        return this._deleted;
    }

    /**
     * When the Bin Tip Weight was last updated
     * 
     * @public
     * @type {Date}
     */
    get updateTimestamp()
    {
        return this._updateTimestamp;
    }

    /**
     * The Site ID associated with this Bin Tip Weight
     * 
     * @public
     * @type {number}
     */
    get siteId()
    {
        return this._siteId;
    }

    /**
     * Convert this **BinTipWeightModel** to a JSON Object
     * 
     * @public
     * @return {Object<string, any>}
     */
    toJSON()
    {
        return {
            id: this._id,
            binTipId: this._binTipId,
            packrunId: this._packrunId,
            createdTimestamp: this._createdTimestamp,
            weightType: this._weightType,
            weight: this._weight,
            binScaleId: this._binScaleId,
            deleted: this._deleted,
            updateTimestamp: this.updateTimestamp
        };
    }

    /**
     * Create a new **BinTipWeightModel** from a JSON Object or JSON String
     * 
     * @static
     * @public
     * @param {Object<string, any>|string} json A JSON Object or JSON String
     * @param {number} siteId The Site ID associated with this Bin Tip Weight
     * @return {BinTipWeightModel}
     */
    static fromJSON(json, siteId)
    {
        let model = new BinTipWeightModel(siteId);
        
        /**
         * The JSON Object
         * 
         * @type {Object<string, any>}
         */
        let jsonObject = {};
        
        if(typeof json === 'string')
        {
            jsonObject = JSON.parse(json);
        }
        else if(typeof json === 'object')
        {
            jsonObject = json;
        }
        
        if('id' in jsonObject)
        {
            model._id = (function(){
                if(typeof jsonObject['id'] !== 'string')
                {
                    return String(jsonObject['id']);
                }
        
                return jsonObject['id'];
            }());
        }
        
        if('binTipId' in jsonObject)
        {
            model._binTipId = (function(){
                if(typeof jsonObject['binTipId'] !== 'string')
                {
                    return String(jsonObject['binTipId']);
                }
        
                return jsonObject['binTipId'];
            }());
        }
        
        if('packrunId' in jsonObject)
        {
            model._packrunId = (function(){
                if(typeof jsonObject['packrunId'] !== 'string')
                {
                    return String(jsonObject['packrunId']);
                }
        
                return jsonObject['packrunId'];
            }());
        }
        
        if('createdTimestamp' in jsonObject)
        {
            model._createdTimestamp = (function(){
                if(typeof jsonObject['createdTimestamp'] !== 'string')
                {
                    return new Date(String(jsonObject['createdTimestamp']));
                }
        
                return new Date(jsonObject['createdTimestamp']);
            }());
        }
        
        if('weightType' in jsonObject)
        {
            model._weightType = (function(){
                if(typeof jsonObject['weightType'] !== 'string')
                {
                    return String(jsonObject['weightType']);
                }
        
                return jsonObject['weightType'];
            }());
        }
        
        if('weight' in jsonObject)
        {
            model._weight = (function(){
                if(typeof jsonObject['weight'] !== 'number')
                {
                    return Number(jsonObject['weight']);
                }
        
                return jsonObject['weight'];
            }());
        }
        
        if('binScaleId' in jsonObject)
        {
            model._binScaleId = (function(){
                if(jsonObject['binScaleId'] === null)
                {
                    return null;
                }
        
                if(typeof jsonObject['binScaleId'] !== 'string')
                {
                    return String(jsonObject['binScaleId']);
                }
        
                return jsonObject['binScaleId'];
            }());
        }
        
        if('deleted' in jsonObject)
        {
            model._deleted = (function(){
                if(typeof jsonObject['deleted'] !== 'boolean')
                {
                    return Boolean(jsonObject['deleted']);
                }
        
                return jsonObject['deleted'];
            }());
        }
        
        if('updateTimestamp' in jsonObject)
        {
            model._updateTimestamp = (function(){
                if(typeof jsonObject['updateTimestamp'] !== 'string')
                {
                    return new Date(String(jsonObject['updateTimestamp']));
                }
        
                return new Date(jsonObject['updateTimestamp']);
            }());
        }
        
        return model;
    }
}

export default BinTipWeightModel;