/**
 * File Auto-Generated by the RICADO Gen 4 PHP API Project
 * 
 * Do Not Edit this File Manually!
 */

import BaseSiteModel from '../../../Models/Site/BaseSiteModel';
import VarietyController from '../../../Controllers/Packhouse/Site/VarietyController';

/**
 * Model Class for a Variety
 * @hideconstructor
 * @extends BaseSiteModel
 */
class VarietyModel extends BaseSiteModel
{
    /**
     * VarietyModel Constructor
     * 
     * @public
     * @param {Object<string, any>} json The Variety Properties
     * @param {number} siteId The Site ID associated with this Variety
     */
    constructor(json, siteId)
    {
        super(json, siteId);
        
        /**
         * The Properties to Update for a Variety
         * 
         * @type {Object<string, any>}
         * @private
         */
        this._updateJson = {};
    }

    /**
     * The Variety ID
     * 
     * @public
     * @type {string}
     */
    get id()
    {
        return this._json.id;
    }

    /**
     * The Variety Code
     * 
     * @public
     * @type {string}
     */
    get code()
    {
        return this._json.code;
    }

    /**
     * The Variety Name
     * 
     * @public
     * @type {string}
     */
    get name()
    {
        return this._json.name;
    }

    /**
     * The Variety Name
     * 
     * @public
     * @type {string}
     */
    set name(value)
    {
        this._json.name = value;
        this._updateJson.name = value;
    }

    /**
     * The Variety Description
     * 
     * @public
     * @type {string}
     */
    get description()
    {
        return this._json.description;
    }

    /**
     * The Variety Description
     * 
     * @public
     * @type {string}
     */
    set description(value)
    {
        this._json.description = value;
        this._updateJson.description = value;
    }

    /**
     * The Variety Image Source
     * 
     * @public
     * @type {string}
     */
    get image()
    {
        return this._json.image;
    }

    /**
     * The Variety Image Source
     * 
     * @public
     * @type {string}
     */
    set image(value)
    {
        this._json.image = value;
        this._updateJson.image = value;
    }

    /**
     * Whether the Variety has been deleted
     * 
     * @public
     * @type {boolean}
     */
    get deleted()
    {
        return this._json.deleted;
    }

    /**
     * When the Variety was last updated
     * 
     * @public
     * @type {Date}
     */
    get updateTimestamp()
    {
        return this._json.updateTimestamp;
    }

    /**
     * The Site ID associated with this Variety
     * 
     * @public
     * @type {number}
     */
    get siteId()
    {
        return this._siteId;
    }

    /**
     * Update this **Variety**
     * 
     * @public
     * @return {Promise<boolean>}
     */
    update()
    {
        return new Promise((resolve, reject) => {
            VarietyController.update(this._siteId, this._json.id, this._updateJson)
            .then((modelResult) => {
                // TODO: Validate the Model Result, Replace everything in this Model with the Model Result, Return True
                
                resolve(true);
            })
            .catch(error => reject(error));
        });
    }

    /**
     * Delete this **Variety**
     * 
     * @public
     * @return {Promise<boolean>}
     */
    delete()
    {
        return VarietyController.delete(this._siteId, this._json.id);
    }
}

export default VarietyModel;