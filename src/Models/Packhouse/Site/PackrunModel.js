/**
 * File Auto-Generated by the RICADO Gen 4 PHP API Project
 * 
 * Do Not Edit this File Manually!
 */

import BaseSiteModel from '../../../Models/Site/BaseSiteModel';
import PackrunController from '../../../Controllers/Packhouse/Site/PackrunController';

/**
 * Model Class for a Packrun
 * @hideconstructor
 * @extends BaseSiteModel
 */
class PackrunModel extends BaseSiteModel
{
    /**
     * PackrunModel Constructor
     * 
     * @public
     * @param {Object<string, any>} json The Packrun Properties
     * @param {number} siteId The Site ID associated with this Packrun
     */
    constructor(json, siteId)
    {
        super(json, siteId);
        
        /**
         * The Properties to Update for a Packrun
         * 
         * @type {Object<string, any>}
         * @private
         */
        this._updateJson = {};
    }

    /**
     * The Packrun ID
     * 
     * @public
     * @type {string}
     */
    get id()
    {
        return this._json.id;
    }

    /**
     * The Packing Line ID this Packrun is associated with
     * 
     * @public
     * @type {string}
     */
    get packingLineId()
    {
        return this._json.packingLineId;
    }

    /**
     * The Packing Line ID this Packrun is associated with
     * 
     * @public
     * @type {string}
     */
    set packingLineId(value)
    {
        this._json.packingLineId = value;
        this._updateJson.packingLineId = value;
    }

    /**
     * The Packrun Name
     * 
     * @public
     * @type {string}
     */
    get name()
    {
        return this._json.name;
    }

    /**
     * When this Packrun was Created
     * 
     * @public
     * @type {Date}
     */
    get createdTimestamp()
    {
        return this._json.createdTimestamp;
    }

    /**
     * When this Packrun was Created
     * 
     * @public
     * @type {Date}
     */
    set createdTimestamp(value)
    {
        this._json.createdTimestamp = value;
        this._updateJson.createdTimestamp = value;
    }

    /**
     * The Grower Name for this Packrun
     * 
     * @public
     * @type {string}
     */
    get growerName()
    {
        return this._json.growerName;
    }

    /**
     * The Grower Name for this Packrun
     * 
     * @public
     * @type {string}
     */
    set growerName(value)
    {
        this._json.growerName = value;
        this._updateJson.growerName = value;
    }

    /**
     * The Grower Code for this Packrun
     * 
     * @public
     * @type {string}
     */
    get growerCode()
    {
        return this._json.growerCode;
    }

    /**
     * The Grower Code for this Packrun
     * 
     * @public
     * @type {string}
     */
    set growerCode(value)
    {
        this._json.growerCode = value;
        this._updateJson.growerCode = value;
    }

    /**
     * The Maturity Area for this Packrun
     * 
     * @public
     * @type {string}
     */
    get maturityArea()
    {
        return this._json.maturityArea;
    }

    /**
     * The Maturity Area for this Packrun
     * 
     * @public
     * @type {string}
     */
    set maturityArea(value)
    {
        this._json.maturityArea = value;
        this._updateJson.maturityArea = value;
    }

    /**
     * When this Packrun was Started
     * 
     * @public
     * @type {?Date}
     */
    get startTimestamp()
    {
        return this._json.startTimestamp;
    }

    /**
     * When this Packrun was Started
     * 
     * @public
     * @type {?Date}
     */
    set startTimestamp(value)
    {
        this._json.startTimestamp = value;
        this._updateJson.startTimestamp = value;
    }

    /**
     * When this Packrun was Finished
     * 
     * @public
     * @type {?Date}
     */
    get finishTimestamp()
    {
        return this._json.finishTimestamp;
    }

    /**
     * When this Packrun was Finished
     * 
     * @public
     * @type {?Date}
     */
    set finishTimestamp(value)
    {
        this._json.finishTimestamp = value;
        this._updateJson.finishTimestamp = value;
    }

    /**
     * The Variety for this Packrun
     * 
     * @public
     * @type {string}
     */
    get varietyId()
    {
        return this._json.varietyId;
    }

    /**
     * The Variety for this Packrun
     * 
     * @public
     * @type {string}
     */
    set varietyId(value)
    {
        this._json.varietyId = value;
        this._updateJson.varietyId = value;
    }

    /**
     * The Growing Method for this Packrun
     * 
     * @public
     * @type {?string}
     */
    get growingMethodId()
    {
        return this._json.growingMethodId;
    }

    /**
     * The Growing Method for this Packrun
     * 
     * @public
     * @type {?string}
     */
    set growingMethodId(value)
    {
        this._json.growingMethodId = value;
        this._updateJson.growingMethodId = value;
    }

    /**
     * The Number of Allocated Bins for this Packrun
     * 
     * @public
     * @type {number}
     */
    get allocatedBins()
    {
        return this._json.allocatedBins;
    }

    /**
     * The Number of Allocated Bins for this Packrun
     * 
     * @public
     * @type {number}
     */
    set allocatedBins(value)
    {
        this._json.allocatedBins = value;
        this._updateJson.allocatedBins = value;
    }

    /**
     * The Time Batches for this Packrun
     * 
     * @public
     * @type {Object[]}
     */
    get timeBatches()
    {
        return this._json.timeBatches;
    }

    /**
     * The Time Batches for this Packrun
     * 
     * @public
     * @type {Object[]}
     */
    set timeBatches(value)
    {
        this._json.timeBatches = value;
        this._updateJson.timeBatches = value;
    }

    /**
     * Whether the Packrun has been deleted
     * 
     * @public
     * @type {boolean}
     */
    get deleted()
    {
        return this._json.deleted;
    }

    /**
     * When the Packrun was last updated
     * 
     * @public
     * @type {Date}
     */
    get updateTimestamp()
    {
        return this._json.updateTimestamp;
    }

    /**
     * The Site ID associated with this Packrun
     * 
     * @public
     * @type {number}
     */
    get siteId()
    {
        return this._siteId;
    }

    /**
     * Update this **Packrun**
     * 
     * @public
     * @return {Promise<boolean>}
     */
    update()
    {
        return new Promise((resolve, reject) => {
            PackrunController.update(this._siteId, this._json.id, this._updateJson)
            .then((modelResult) => {
                // TODO: Validate the Model Result, Replace everything in this Model with the Model Result, Return True
                
                resolve(true);
            })
            .catch(error => reject(error));
        });
    }

    /**
     * Delete this **Packrun**
     * 
     * @public
     * @return {Promise<boolean>}
     */
    delete()
    {
        return PackrunController.delete(this._siteId, this._json.id);
    }
}

export default PackrunModel;