/**
 * File Auto-Generated by the RICADO Gen 4 PHP API Project
 * 
 * Do Not Edit this File Manually!
 */

import BaseSiteModel from '../../../Models/Site/BaseSiteModel';

/**
 * Model Class for a Compac Sizer Outlet Product Change
 * 
 * @class
 * @hideconstructor
 * @extends BaseSiteModel
 */
class CompacSizerOutletProductChangeModel extends BaseSiteModel
{
    /**
     * CompacSizerOutletProductChangeModel Constructor
     * 
     * @protected
     * @param {number} siteId The Site ID associated with this Compac Sizer Outlet Product Change
     */
    constructor(siteId)
    {
        super();
        
        /**
         * The Compac Sizer Outlet Product Change ID
         * 
         * @type {string}
         * @private
         */
        this._id = undefined;
        
        /**
         * The Compac Sizer ID this Outlet Change is associated with
         * 
         * @type {string}
         * @private
         */
        this._compacSizerId = undefined;
        
        /**
         * The Sizer Outlet Number this Outlet Change is associated with
         * 
         * @type {string}
         * @private
         */
        this._outletNumber = undefined;
        
        /**
         * When this Outlet Change occurred
         * 
         * @type {Date}
         * @private
         */
        this._createdTimestamp = undefined;
        
        /**
         * The ID of the Previous Product that was active on the Outlet
         * 
         * @type {?string}
         * @private
         */
        this._previousProductId = undefined;
        
        /**
         * The Name of the Previous Product that was active on the Outlet
         * 
         * @type {?string}
         * @private
         */
        this._previousProductName = undefined;
        
        /**
         * The ID of the New Product that is now active on the Outlet
         * 
         * @type {string}
         * @private
         */
        this._newProductId = undefined;
        
        /**
         * The Name of the New Product that is now active on the Outlet
         * 
         * @type {string}
         * @private
         */
        this._newProductName = undefined;
        
        /**
         * Whether the Compac Sizer Outlet Product Change has been deleted
         * 
         * @type {boolean}
         * @private
         */
        this._deleted = undefined;
        
        /**
         * When the Compac Sizer Outlet Product Change was last updated
         * 
         * @type {Date}
         * @private
         */
        this._updateTimestamp = undefined;
        
        /**
         * The Site ID associated with this Compac Sizer Outlet Product Change
         * 
         * @type {number}
         * @private
         */
        this._siteId = siteId;
    }

    /**
     * The Compac Sizer Outlet Product Change ID
     * 
     * @public
     * @type {string}
     */
    get id()
    {
        return this._id;
    }

    /**
     * The Compac Sizer ID this Outlet Change is associated with
     * 
     * @public
     * @type {string}
     */
    get compacSizerId()
    {
        return this._compacSizerId;
    }

    /**
     * The Sizer Outlet Number this Outlet Change is associated with
     * 
     * @public
     * @type {string}
     */
    get outletNumber()
    {
        return this._outletNumber;
    }

    /**
     * When this Outlet Change occurred
     * 
     * @public
     * @type {Date}
     */
    get createdTimestamp()
    {
        return this._createdTimestamp;
    }

    /**
     * The ID of the Previous Product that was active on the Outlet
     * 
     * @public
     * @type {?string}
     */
    get previousProductId()
    {
        return this._previousProductId;
    }

    /**
     * The Name of the Previous Product that was active on the Outlet
     * 
     * @public
     * @type {?string}
     */
    get previousProductName()
    {
        return this._previousProductName;
    }

    /**
     * The ID of the New Product that is now active on the Outlet
     * 
     * @public
     * @type {string}
     */
    get newProductId()
    {
        return this._newProductId;
    }

    /**
     * The Name of the New Product that is now active on the Outlet
     * 
     * @public
     * @type {string}
     */
    get newProductName()
    {
        return this._newProductName;
    }

    /**
     * Whether the Compac Sizer Outlet Product Change has been deleted
     * 
     * @public
     * @type {boolean}
     */
    get deleted()
    {
        return this._deleted;
    }

    /**
     * When the Compac Sizer Outlet Product Change was last updated
     * 
     * @public
     * @type {Date}
     */
    get updateTimestamp()
    {
        return this._updateTimestamp;
    }

    /**
     * The Site ID associated with this Compac Sizer Outlet Product Change
     * 
     * @public
     * @type {number}
     */
    get siteId()
    {
        return this._siteId;
    }

    /**
     * Convert this **CompacSizerOutletProductChangeModel** to a JSON Object
     * 
     * @public
     * @return {Object<string, any>}
     */
    toJSON()
    {
        return {
            id: this._id,
            compacSizerId: this._compacSizerId,
            outletNumber: this._outletNumber,
            createdTimestamp: this._createdTimestamp,
            previousProductId: this._previousProductId,
            previousProductName: this._previousProductName,
            newProductId: this._newProductId,
            newProductName: this._newProductName,
            deleted: this._deleted,
            updateTimestamp: this._updateTimestamp
        };
    }

    /**
     * Create a new **CompacSizerOutletProductChangeModel** from a JSON Object or JSON String
     * 
     * @static
     * @public
     * @param {Object<string, any>|string} json A JSON Object or JSON String
     * @param {number} siteId The Site ID associated with this Compac Sizer Outlet Product Change
     * @return {CompacSizerOutletProductChangeModel}
     */
    static fromJSON(json, siteId)
    {
        let model = new CompacSizerOutletProductChangeModel(siteId);
        
        /**
         * The JSON Object
         * 
         * @type {Object<string, any>}
         */
        let jsonObject = {};
        
        if(typeof json === 'string')
        {
            jsonObject = JSON.parse(json);
        }
        else if(typeof json === 'object')
        {
            jsonObject = json;
        }
        
        if('id' in jsonObject)
        {
            model._id = (function(){
                if(typeof jsonObject['id'] !== 'string')
                {
                    return String(jsonObject['id']);
                }
        
                return jsonObject['id'];
            }());
        }
        
        if('compacSizerId' in jsonObject)
        {
            model._compacSizerId = (function(){
                if(typeof jsonObject['compacSizerId'] !== 'string')
                {
                    return String(jsonObject['compacSizerId']);
                }
        
                return jsonObject['compacSizerId'];
            }());
        }
        
        if('outletNumber' in jsonObject)
        {
            model._outletNumber = (function(){
                if(typeof jsonObject['outletNumber'] !== 'string')
                {
                    return String(jsonObject['outletNumber']);
                }
        
                return jsonObject['outletNumber'];
            }());
        }
        
        if('createdTimestamp' in jsonObject)
        {
            model._createdTimestamp = (function(){
                if(typeof jsonObject['createdTimestamp'] !== 'string')
                {
                    return new Date(String(jsonObject['createdTimestamp']));
                }
        
                return new Date(jsonObject['createdTimestamp']);
            }());
        }
        
        if('previousProductId' in jsonObject)
        {
            model._previousProductId = (function(){
                if(jsonObject['previousProductId'] === null)
                {
                    return null;
                }
        
                if(typeof jsonObject['previousProductId'] !== 'string')
                {
                    return String(jsonObject['previousProductId']);
                }
        
                return jsonObject['previousProductId'];
            }());
        }
        
        if('previousProductName' in jsonObject)
        {
            model._previousProductName = (function(){
                if(jsonObject['previousProductName'] === null)
                {
                    return null;
                }
        
                if(typeof jsonObject['previousProductName'] !== 'string')
                {
                    return String(jsonObject['previousProductName']);
                }
        
                return jsonObject['previousProductName'];
            }());
        }
        
        if('newProductId' in jsonObject)
        {
            model._newProductId = (function(){
                if(typeof jsonObject['newProductId'] !== 'string')
                {
                    return String(jsonObject['newProductId']);
                }
        
                return jsonObject['newProductId'];
            }());
        }
        
        if('newProductName' in jsonObject)
        {
            model._newProductName = (function(){
                if(typeof jsonObject['newProductName'] !== 'string')
                {
                    return String(jsonObject['newProductName']);
                }
        
                return jsonObject['newProductName'];
            }());
        }
        
        if('deleted' in jsonObject)
        {
            model._deleted = (function(){
                if(typeof jsonObject['deleted'] !== 'boolean')
                {
                    return Boolean(jsonObject['deleted']);
                }
        
                return jsonObject['deleted'];
            }());
        }
        
        if('updateTimestamp' in jsonObject)
        {
            model._updateTimestamp = (function(){
                if(typeof jsonObject['updateTimestamp'] !== 'string')
                {
                    return new Date(String(jsonObject['updateTimestamp']));
                }
        
                return new Date(jsonObject['updateTimestamp']);
            }());
        }
        
        return model;
    }
}

export default CompacSizerOutletProductChangeModel;