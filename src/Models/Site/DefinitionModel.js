/**
 * File Auto-Generated by the RICADO Gen 4 PHP API Project
 * 
 * Do Not Edit this File Manually!
 */

import BaseSiteModel from '../../Models/Site/BaseSiteModel';
import DefinitionController from '../../Controllers/Site/DefinitionController';

/**
 * Model Class for a Definition
 * @hideconstructor
 * @extends BaseSiteModel
 */
class DefinitionModel extends BaseSiteModel
{
    /**
     * DefinitionModel Constructor
     * 
     * @public
     * @param {Object<string, any>} json The Definition Properties
     * @param {number} siteId The Site ID associated with this Definition
     */
    constructor(json, siteId)
    {
        super(json, siteId);
        
        /**
         * The Properties to Update for a Definition
         * 
         * @type {Object<string, any>}
         * @private
         */
        this._updateJson = {};
    }

    /**
     * The Definition ID
     * 
     * @public
     * @type {string}
     */
    get id()
    {
        return this._json.id;
    }

    /**
     * The Definition Key Index
     * 
     * @public
     * @type {string}
     */
    get keyIndex()
    {
        return this._json.keyIndex;
    }

    /**
     * The Definition Type
     * 
     * @public
     * @type {string}
     */
    get type()
    {
        return this._json.type;
    }

    /**
     * The Definition Type
     * 
     * @public
     * @type {string}
     */
    set type(value)
    {
        this._json.type = value;
        this._updateJson.type = value;
    }

    /**
     * The Definition Data
     * 
     * @public
     * @type {Object}
     */
    get data()
    {
        return this._json.data;
    }

    /**
     * The Definition Data
     * 
     * @public
     * @type {Object}
     */
    set data(value)
    {
        this._json.data = value;
        this._updateJson.data = value;
    }

    /**
     * Whether the Definition has been deleted
     * 
     * @public
     * @type {boolean}
     */
    get deleted()
    {
        return this._json.deleted;
    }

    /**
     * When the Definition was last updated
     * 
     * @public
     * @type {Date}
     */
    get updateTimestamp()
    {
        return this._json.updateTimestamp;
    }

    /**
     * The Site ID associated with this Definition
     * 
     * @public
     * @type {number}
     */
    get siteId()
    {
        return this._siteId;
    }

    /**
     * Update this **Definition**
     * 
     * @public
     * @return {Promise<boolean>}
     */
    update()
    {
        return new Promise((resolve, reject) => {
            DefinitionController.update(this._siteId, this._json.id, this._updateJson)
            .then((modelResult) => {
                // TODO: Validate the Model Result, Replace everything in this Model with the Model Result, Return True
                
                resolve(true);
            })
            .catch(error => reject(error));
        });
    }

    /**
     * Delete this **Definition**
     * 
     * @public
     * @return {Promise<boolean>}
     */
    delete()
    {
        return DefinitionController.delete(this._siteId, this._json.id);
    }
}

export default DefinitionModel;